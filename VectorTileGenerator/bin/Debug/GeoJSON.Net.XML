<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GeoJSON.Net</name>
    </assembly>
    <members>
        <member name="T:TopoJSON.Net.Converters.TopoJSONTransformationConverter">
            <summary>
            Transformation info serializer.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Converters.TopoJSONTransformationConverter.CanConvert(System.Type)">
            <summary>
            Converts if this is a transformation info instance.
            </summary>
            <param name="objectType">The object type</param>
            <returns></returns>
        </member>
        <member name="M:TopoJSON.Net.Converters.TopoJSONTransformationConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Not implemented yet.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:TopoJSON.Net.Converters.TopoJSONTransformationConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serializes the transformation info.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:GeoJSON.Net.Converters.TopoJSONGeometryConverter">
            <summary>
            Defines the GeometryObject type. Converts to/from a SimpleGeo 'geometry' field
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Converters.TopoJSONGeometryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:GeoJSON.Net.Converters.TopoJSONGeometryConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.TopoJSONGeometryConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GeoJSON.Net.Converters.TopoJSONObjectsConverter">
            <summary>
            Defines the GeometryObject type. Converts to/from a SimpleGeo 'geometry' field
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Converters.TopoJSONObjectsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:GeoJSON.Net.Converters.TopoJSONObjectsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.TopoJSONObjectsConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GeoJSON.Net.Converters.PolygonArcsConverter">
            <summary>
            Serializes and deserializes 
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Converters.PolygonArcsConverter.CanConvert(System.Type)">
            <summary>
            Converts if we have a list of arcs.
            </summary>
            <param name="objectType">The object type</param>
            <returns></returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.PolygonArcsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Not implemented yet.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.PolygonArcsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serializes the arcs.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:TopoJSON.Net.Converters.ArcsConverter">
            <summary>
            Serializes a list of arcs into JSON.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Converters.ArcsConverter.CanConvert(System.Type)">
            <summary>
            Converts if we have a list of arcs.
            </summary>
            <param name="objectType">The object type</param>
            <returns></returns>
        </member>
        <member name="M:TopoJSON.Net.Converters.ArcsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Not implemented yet.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:TopoJSON.Net.Converters.ArcsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serializes the arcs.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:GeoJSON.Net.Converters.GeometryConverter">
            <summary>
            Defines the GeometryObject type. Converts to/from a SimpleGeo 'geometry' field
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Converters.GeometryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:GeoJSON.Net.Converters.GeometryConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.GeometryConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GeoJSON.Net.Converters.MultiPolygonConverter">
            <summary>
            Converter to read and write the <see cref="T:GeoJSON.Net.Geometry.MultiPolygon"/> type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Converters.MultiPolygonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:GeoJSON.Net.Converters.MultiPolygonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.MultiPolygonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GeoJSON.Net.Converters.PointConverter">
            <summary>
            Converter to read and write the <see cref="T:GeoJSON.Net.Geometry.GeographicPosition"/> type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Converters.PointConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:GeoJSON.Net.Converters.PointConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.PointConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GeoJSON.Net.Converters.LineStringConverter">
            <summary>
            Converter to read and write the <see cref="T:GeoJSON.Net.Geometry.MultiPolygon"/> type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Converters.LineStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:GeoJSON.Net.Converters.LineStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.LineStringConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GeoJSON.Net.Converters.PolygonConverter">
            <summary>
            Converter to read and write the <see cref="T:GeoJSON.Net.Geometry.MultiPolygon"/> type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Converters.PolygonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:GeoJSON.Net.Converters.PolygonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:GeoJSON.Net.Converters.PolygonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GeoJSON.Net.CoordinateReferenceSystem.LinkedCRS">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#linked-crs">Linked CRS type</see>.
            </summary>
        </member>
        <member name="T:GeoJSON.Net.CoordinateReferenceSystem.CRSBase">
            <summary>
            Base class for all IGeometryObject implementing types
            </summary>
        </member>
        <member name="P:GeoJSON.Net.CoordinateReferenceSystem.CRSBase.Type">
            <summary>
            Gets the type of the GeometryObject object.
            </summary>
        </member>
        <member name="P:GeoJSON.Net.CoordinateReferenceSystem.CRSBase.Properties">
            <summary>
            Gets the properties.
            </summary>
        </member>
        <member name="T:GeoJSON.Net.CoordinateReferenceSystem.ICRSObject">
            <summary>
            Base Interface for CRSBase Object types.
            </summary>
        </member>
        <member name="P:GeoJSON.Net.CoordinateReferenceSystem.ICRSObject.Type">
            <summary>
            Gets the CRS type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.CoordinateReferenceSystem.LinkedCRS.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.CoordinateReferenceSystem.LinkedCRS"/> class.
            </summary>
            <param name="href">The mandatory <see href="http://geojson.org/geojson-spec.html#linked-crs">href</see> member must be a dereferenceable URI.</param>
            <param name="type">The optional type member will be put in the properties Dictionary as specified in the <see href="http://geojson.org/geojson-spec.html#linked-crs">GeoJSON spec</see>.</param>
        </member>
        <member name="M:GeoJSON.Net.CoordinateReferenceSystem.LinkedCRS.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.CoordinateReferenceSystem.LinkedCRS"/> class.
            </summary>
            <param name="href">The mandatory <see href="http://geojson.org/geojson-spec.html#linked-crs">href</see> member must be a dereferenceable URI.</param>
            <param name="type">The optional type member will be put in the properties Dictionary as specified in the <see href="http://geojson.org/geojson-spec.html#linked-crs">GeoJSON spec</see>.</param>
        </member>
        <member name="T:GeoJSON.Net.CoordinateReferenceSystem.CRSType">
            <summary>
            Defines the GeoJSON Coordinate Reference System Objects (CRS) types as defined in the <see href="http://geojson.org/geojson-spec.html#coordinate-reference-system-objects">geojson.org v1.0 spec</see>.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.CoordinateReferenceSystem.CRSType.Name">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#named-crs">Named</see> CRS type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.CoordinateReferenceSystem.CRSType.Link">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#linked-crs">Linked</see> CRS type.
            </summary>
        </member>
        <member name="T:GeoJSON.Net.CoordinateReferenceSystem.NamedCRS">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#named-crs">Named CRS type</see>.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.CoordinateReferenceSystem.NamedCRS.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.CoordinateReferenceSystem.NamedCRS"/> class.
            </summary>
            <param name="name">
            The mandatory <see href="http://geojson.org/geojson-spec.html#named-crs">name</see>
            member must be a string identifying a coordinate reference system. OGC CRS URNs such as
            'urn:ogc:def:crs:OGC:1.3:CRS84' shall be preferred over legacy identifiers such as 'EPSG:4326'.
            </param>
        </member>
        <member name="T:GeoJSON.Net.GeoJSONObject">
            <summary>
            Base class for all IGeometryObject implementing types
            </summary>
        </member>
        <member name="T:GeoJSON.Net.IGeoJSONObject">
            <summary>
            Base Interface for GeoJSONObject types.
            </summary>
        </member>
        <member name="P:GeoJSON.Net.IGeoJSONObject.Type">
            <summary>
            Gets the (mandatory) type of the <see href="http://geojson.org/geojson-spec.html#geojson-objects">GeoJSON Object</see>.
            </summary>
            <value>
            The type of the object.
            </value>
        </member>
        <member name="P:GeoJSON.Net.IGeoJSONObject.CRS">
            <summary>
            Gets the (optional) <see href="http://geojson.org/geojson-spec.html#coordinate-reference-system-objects">Coordinate Reference System Object</see>.
            </summary>
            <value>
            The Coordinate Reference System Objects.
            </value>
        </member>
        <member name="P:GeoJSON.Net.IGeoJSONObject.BoundingBoxes">
            <summary>
            Gets or sets the (optional) <see href="http://geojson.org/geojson-spec.html#coordinate-reference-system-objects">Bounding Boxes</see>.
            </summary>
            <value>
            The value of the bbox member must be a 2*n array where n is the number of dimensions represented in the
            contained geometries, with the lowest values for all axes followed by the highest values.
            The axes order of a bbox follows the axes order of geometries.
            In addition, the coordinate reference system for the bbox is assumed to match the coordinate reference
            system of the GeoJSON object of which it is a member.
            </value>
        </member>
        <member name="P:GeoJSON.Net.GeoJSONObject.Type">
            <summary>
            Gets the (mandatory) type of the <see href="http://geojson.org/geojson-spec.html#geojson-objects">GeoJSON Object</see>.
            </summary>
            <value>
            The type of the object.
            </value>
        </member>
        <member name="P:GeoJSON.Net.GeoJSONObject.CRS">
            <summary>
            Gets or sets the (optional) <see href="http://geojson.org/geojson-spec.html#coordinate-reference-system-objects">Coordinate Reference System Object</see>.
            </summary>
            <value>
            The Coordinate Reference System Objects.
            </value>
        </member>
        <member name="P:GeoJSON.Net.GeoJSONObject.BoundingBoxes">
            <summary>
            Gets or sets the (optional) <see href="http://geojson.org/geojson-spec.html#coordinate-reference-system-objects">Bounding Boxes</see>.
            </summary>
            <value>
            The value of the bbox member must be a 2*n array where n is the number of dimensions represented in the
            contained geometries, with the lowest values for all axes followed by the highest values.
            The axes order of a bbox follows the axes order of geometries.
            In addition, the coordinate reference system for the bbox is assumed to match the coordinate reference
            system of the GeoJSON object of which it is a member.
            </value>
        </member>
        <member name="T:GeoJSON.Net.Geometry.Arc">
            <summary>
            An arc is an array of positions from which other parts of the topology can be 
            constructed. See also: https://github.com/topojson/topojson-specification/blob/master/README.md#213-arcs
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.Arc.#ctor(System.Collections.Generic.List{GeoJSON.Net.Geometry.GeographicPosition})">
            <summary>
            Constructs an arc from a given list of positions. The must be at least two positions.
            </summary>
            <param name="positions">The positions.</param>
        </member>
        <member name="M:GeoJSON.Net.Geometry.Arc.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:GeoJSON.Net.Geometry.Arc.Positions">
            <summary>
            The positions.
            </summary>
        </member>
        <member name="T:TopoJSON.Net.Geometry.INamedGeometryObject">
            <summary>
            In order to properly build a topology we need a name key for each object.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.INamedGeometryObject.Name">
            <summary>
            A unique Id. This is needed for named (sub-) objects
            </summary>
        </member>
        <member name="T:TopoJSON.Net.Geometry.TopoJSONMultiLineString">
            <summary>
            Defines the <see href="https://github.com/topojson/topojson-specification/blob/master/README.md#224-multilinestring">MultiLineString</see> type.
            </summary>
        </member>
        <member name="T:TopoJSON.Net.TopoJSONObject">
            <summary>
            Base class for all IGeometryObject implementing types
            </summary>
        </member>
        <member name="T:TopoJSON.Net.ITopoJSONObject">
            <summary>
            Base Interface for TopoJSONObject types.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.ITopoJSONObject.Type">
            <summary>
            Gets the (mandatory) type of the <see href="https://github.com/topojson/topojson-specification/blob/master/README.md#22-geometry-objects">TopoJSON Object</see>.
            </summary>
            <value>
            The type of the object.
            </value>
        </member>
        <member name="P:TopoJSON.Net.ITopoJSONObject.BoundingBoxes">
            <summary>
            Gets or sets the (optional) <see href="https://github.com/topojson/topojson-specification/blob/master/README.md#3-bounding-boxes">Bounding Boxes</see>.
            </summary>
            <value>
            The value of the bbox member must be a 2*n array where n is the number of dimensions represented in the
            contained geometries, with the lowest values for all axes followed by the highest values.
            The axes order of a bbox follows the axes order of geometries. The bounding box should not be transformed using the topology’s transform, if any.
            </value>
        </member>
        <member name="P:TopoJSON.Net.TopoJSONObject.Type">
            <summary>
            Gets the (mandatory) type of the <see href="https://github.com/topojson/topojson-specification/blob/master/README.md#21-topology-objects">TopoJSON Object</see>.
            </summary>
            <value>
            The type of the object.
            </value>
        </member>
        <member name="P:TopoJSON.Net.TopoJSONObject.BoundingBoxes">
            <summary>
            Gets or sets the (optional) <see href="https://github.com/topojson/topojson-specification/blob/master/README.md#3-bounding-boxes">Bounding Boxes</see>.
            </summary>
            <value>
            The value of the bbox member must be a 2*n array where n is the number of dimensions represented in the
            contained geometries, with the lowest values for all axes followed by the highest values.
            The axes order of a bbox follows the axes order of geometries. The bounding box should not be transformed using the topology’s transform, if any.
            </value>
        </member>
        <member name="P:TopoJSON.Net.TopoJSONObject.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:GeoJSON.Net.Geometry.IGeometryObject">
            <summary>
            Base Interface for GeometryObject types.
            </summary>
        </member>
        <member name="P:GeoJSON.Net.Geometry.IGeometryObject.Type">
            <summary>
            Gets the (mandatory) type of the <see href="http://geojson.org/geojson-spec.html#geometry-objects">GeoJSON Object</see>.
            However, for <see href="http://geojson.org/geojson-spec.html#geometry-objects">GeoJSON Objects</see> only
            the 'Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon', or 'GeometryCollection' types are allowed.
            </summary>
            <value>
            The type of the object.
            </value>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONMultiLineString.#ctor(System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}})">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONMultiLineString"/> class.
            </summary>
            <param name="arcIdx">The arcs index.</param>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONMultiLineString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONMultiLineString"/> class.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONMultiLineString.ArcIdx">
            <summary>
            The arc indices.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONMultiLineString.Coordinates">
            <summary>
            Gets the Coordinates.
            </summary>
            <value>The Coordinates.</value>
        </member>
        <member name="T:TopoJSON.Net.Geometry.TopoJSONLineString">
            <summary>
              Defines the <see href="http://geojson.org/geojson-spec.html#linestring">LineString</see> type.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONLineString.#ctor(System.Collections.Generic.List{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONLineString"/> class.
            </summary>
            <param name="arcindex">The arcs index.</param>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONLineString.#ctor(System.Collections.Generic.List{GeoJSON.Net.Geometry.GeographicPosition})">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONLineString"/> class.
            </summary>
            <param name="coords">A list of coordinates.</param>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONLineString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONLineString"/> class.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONLineString.IsLinearRing">
            <summary>
            Determines whether this LineString is a <see href="http://geojson.org/geojson-spec.html#linestring">LinearRing</see>.
            </summary>
            <returns>
              <c>true</c> if it is a linear ring; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONLineString.IsClosed">
            <summary>
            Determines whether this instance has its first and last coordinate at the same position and thereby is closed.
            </summary>
            <returns>
              <c>true</c> if this instance is closed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONLineString.ArcIdx">
            <summary>
            The arc indices.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONLineString.Coordinates">
            <summary>
            Gets the Positions.
            </summary>
            <value>The Positions.</value>
        </member>
        <member name="T:TopoJSON.Net.Geometry.TopoJSONMultiPolygon">
            <summary>
            Defines the <see href="https://github.com/topojson/topojson-specification#226-multipolygon">MultiPolygon</see> type.
            For type “MultiPolygon”, the “arcs” member must be an array of Polygon arc indexes.
            </summary>
            <seealso href="http://geojson.org/geojson-spec.html#multipolygon"/>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONMultiPolygon.#ctor(System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}}})">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONPolygon"/> class.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONMultiPolygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONPolygon"/> class.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONMultiPolygon.GetHashCode">
            <summary>
            Get the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONMultiPolygon.ArcIdx">
            <summary>
            The arc indices.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONMultiPolygon.Coordinates">
            <summary>
            Gets the list of points outlining this Polygon.
            </summary>
        </member>
        <member name="T:TopoJSON.Net.Geometry.TopoJSONNamedObjectWrapper">
            <summary>
            This is a wrapper around a geometry object that allows for assigning 
            a key.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONNamedObjectWrapper.#ctor(System.String,GeoJSON.Net.Geometry.IGeometryObject)">
            <summary>
            This is the full constructor.
            </summary>
            <param name="g">The geometry.</param>
            <param name="name">The object name.</param>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONNamedObjectWrapper.Name">
            <summary>
            A unique Id. This is needed for named (sub-) objects
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONNamedObjectWrapper.Geometry">
            <summary>
            The Geometry.
            </summary>
        </member>
        <member name="T:TopoJSON.Net.Geometry.TopoJSONPolygon">
            <summary>
            Defines the <see href="https://github.com/topojson/topojson-specification#225-polygon">Polygon</see> type.
            For type “Polygon”, the “arcs” member must be an array of LinearRing arc indexes. For Polygons with multiple rings, 
            the first must be the exterior ring and any others must be interior rings or holes. 
            A LinearRing is closed LineString with 4 or more positions. The first and last positions are equivalent (they represent equivalent points).
            </summary>
            <seealso href="http://geojson.org/geojson-spec.html#polygon"/>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONPolygon.#ctor(System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}})">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONPolygon"/> class.
            </summary>
            <param name="arcIdx">The arcs index.</param>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONPolygon.#ctor(System.Collections.Generic.List{GeoJSON.Net.Geometry.GeographicPosition})">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONPolygon"/> class.
            </summary>
            <param name="coords">The coordinates.</param>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONPolygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopoJSON.Net.Geometry.TopoJSONPolygon"/> class.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONPolygon.GetHashCode">
            <summary>
            Get the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONPolygon.ArcIdx">
            <summary>
            The arc indices.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONPolygon.Coordinates">
            <summary>
            Gets the list of points outlining this Polygon.
            </summary>
        </member>
        <member name="T:TopoJSON.Net.Geometry.TopoJSONTransformationInfo">
            <summary>
            Holds all information about quantization such as translation and scale.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.TopoJSONTransformationInfo.#ctor">
            <summary>
            Standard constructor.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONTransformationInfo.isQuantized">
            <summary>
            Is the object quantized?
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONTransformationInfo.Translation">
            <summary>
            The translation values.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.TopoJSONTransformationInfo.Scale">
            <summary>
            An array holding the scale factors.
            </summary>
        </member>
        <member name="T:TopoJSON.Net.Geometry.Topology">
            <summary>
            The topology type is the root for all TopoJSON objects and 
            encapsulates objects and arcs.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.Topology.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:TopoJSON.Net.Geometry.Topology.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)">
            <summary>
            This method is called after the deserialization. It basically restores 
            the object consistency by iterating over all geometries and assigning 
            the correct coordinates (using the arcs index).
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:TopoJSON.Net.Geometry.Topology.restoreGeometryCoordinates(GeoJSON.Net.Geometry.IGeometryObject)">
            <summary>
            Restores the coordinates for a given Geometry Object.
            </summary>
            <param name="igo">The Geometry Object</param>
        </member>
        <member name="M:TopoJSON.Net.Geometry.Topology.getCoordinatesFromArcsIndex(System.Collections.Generic.List{System.Int32})">
            <summary>
            From a given arcs index this method retrieves and decodes all coordinates
            and stores them in a list.
            </summary>
            <param name="idxArray">The index.</param>
            <returns>A list of coordinates.</returns>
        </member>
        <member name="M:TopoJSON.Net.Geometry.Topology.decodeArc(GeoJSON.Net.Geometry.Arc)">
            <summary>
            Decodes the positions of an arc. This is pretty much a 1:1 conversion of the method
            suggested here: https://github.com/topojson/topojson-specification/blob/master/README.md#213-arcs
            </summary>
            <param name="arc">The arc.</param>
            <returns>The decoded arc.</returns>
        </member>
        <member name="P:TopoJSON.Net.Geometry.Topology.Objects">
            <summary>
            The list of arcs.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.Topology.Arcs">
            <summary>
            The list of arcs.
            </summary>
        </member>
        <member name="P:TopoJSON.Net.Geometry.Topology.Transform">
            <summary>
            The transformation information
            </summary>
        </member>
        <member name="T:GeoJSON.Net.Geometry.GeometryCollection">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#geometry-collection">GeometryCollection</see> type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.GeometryCollection.#ctor(System.Collections.Generic.List{GeoJSON.Net.Geometry.IGeometryObject})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.GeometryCollection"/> class.
            </summary>
            <param name="geometries">The geometries contained in this GeometryCollection.</param>
        </member>
        <member name="P:GeoJSON.Net.Geometry.GeometryCollection.Geometries">
            <summary>
            Gets the list of Polygons enclosed in this MultiPolygon.
            </summary>
        </member>
        <member name="T:GeoJSON.Net.Geometry.ProjectedPosition">
            <summary>
            Defines the Projected Position type a.k.a. <see href="http://geojson.org/geojson-spec.html#positions">Projected Coordinate Reference System</see>.
            </summary>
        </member>
        <member name="T:GeoJSON.Net.Geometry.Position">
            <summary>
            The position.
            </summary>
        </member>
        <member name="T:GeoJSON.Net.Geometry.IPosition">
            <summary>
            The position interface.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.ProjectedPosition.#ctor(System.Double,System.Double,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.ProjectedPosition"/> class.
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <param name="altitude">The altitude in m(eter).</param>
        </member>
        <member name="M:GeoJSON.Net.Geometry.ProjectedPosition.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.ProjectedPosition"/> class.
            </summary>
            <param name="easting">The easting, e.g. '38.889722'.</param>
            <param name="northing">The northing, e.g. '-77.008889'.</param>
            <param name="altitude">The altitude in m(eter).</param>
        </member>
        <member name="M:GeoJSON.Net.Geometry.ProjectedPosition.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:GeoJSON.Net.Geometry.ProjectedPosition"/> class from being created.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.ProjectedPosition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:GeoJSON.Net.Geometry.ProjectedPosition.Easting">
            <summary>
            Gets the easting.
            </summary>
            <value>The easting.</value>
        </member>
        <member name="P:GeoJSON.Net.Geometry.ProjectedPosition.Northing">
            <summary>
            Gets the northing.
            </summary>
            <value>The northing.</value>
        </member>
        <member name="P:GeoJSON.Net.Geometry.ProjectedPosition.Altitude">
            <summary>
            Gets the altitude.
            </summary>
        </member>
        <member name="T:GeoJSON.Net.Geometry.MultiLineString">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#multilinestring">MultiLineString</see> type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.MultiLineString.#ctor(System.Collections.Generic.List{GeoJSON.Net.Geometry.LineString})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.MultiLineString"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:GeoJSON.Net.Geometry.MultiLineString.Coordinates">
            <summary>
            Gets the Coordinates.
            </summary>
            <value>The Coordinates.</value>
        </member>
        <member name="T:GeoJSON.Net.Geometry.LineString">
            <summary>
              Defines the <see href="http://geojson.org/geojson-spec.html#linestring">LineString</see> type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.LineString.#ctor(System.Collections.Generic.IEnumerable{GeoJSON.Net.Geometry.IPosition})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.LineString"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:GeoJSON.Net.Geometry.LineString.IsLinearRing">
            <summary>
            Determines whether this LineString is a <see href="http://geojson.org/geojson-spec.html#linestring">LinearRing</see>.
            </summary>
            <returns>
              <c>true</c> if it is a linear ring; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GeoJSON.Net.Geometry.LineString.IsClosed">
            <summary>
            Determines whether this instance has its first and last coordinate at the same position and thereby is closed.
            </summary>
            <returns>
              <c>true</c> if this instance is closed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:GeoJSON.Net.Geometry.LineString.Coordinates">
            <summary>
            Gets the Positions.
            </summary>
            <value>The Positions.</value>
        </member>
        <member name="T:GeoJSON.Net.Geometry.MultiPoint">
            <summary>
            Contains an array of <see cref="T:GeoJSON.Net.Geometry.Point"/>s.
            </summary>
            <seealso href="http://geojson.org/geojson-spec.html#multipoint"/>
        </member>
        <member name="M:GeoJSON.Net.Geometry.MultiPoint.#ctor(System.Collections.Generic.List{GeoJSON.Net.Geometry.Point})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.MultiPoint"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:GeoJSON.Net.Geometry.MultiPoint.Coordinates">
            <summary>
            Gets the Coordinates.
            </summary>
            <value>The Coordinates.</value>
        </member>
        <member name="T:GeoJSON.Net.GeoJSONObjectType">
            <summary>
            Defines the GeoJSON Objects types as defined in the <see href="http://geojson.org/geojson-spec.html#geojson-objects">geojson.org v1.0 spec</see>.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.Point">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#point">Point</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.MultiPoint">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#multipoint">MultiPoint</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.LineString">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#linestring">LineString</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.MultiLineString">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#multilinestring">MultiLineString</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.Polygon">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#polygon">Polygon</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.MultiPolygon">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#multipolygon">MultiPolygon</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.GeometryCollection">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#geometry-collection">GeometryCollection</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.Feature">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#feature-objects">Feature</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.FeatureCollection">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#feature-collection-objects">FeatureCollection</see> type.
            </summary>
        </member>
        <member name="F:GeoJSON.Net.GeoJSONObjectType.Topology">
            <summary>
            The topology type <see href="https://github.com/topojson/topojson-specification/blob/master/README.md#21-topology-objects">(definition)</see>
            </summary>
        </member>
        <member name="T:GeoJSON.Net.Geometry.GeographicPosition">
            <summary>
            Defines the Geographic Position type a.k.a. <see href="http://geojson.org/geojson-spec.html#positions">Geographic Coordinate Reference System</see>.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.GeographicPosition.#ctor(System.Double,System.Double,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.GeographicPosition"/> class.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <param name="altitude">The altitude in m(eter).</param>
        </member>
        <member name="M:GeoJSON.Net.Geometry.GeographicPosition.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.GeographicPosition"/> class.
            </summary>
            <param name="latitude">The latitude, e.g. '38.889722'.</param>
            <param name="longitude">The longitude, e.g. '-77.008889'.</param>
            <param name="altitude">The altitude in m(eter).</param>
        </member>
        <member name="M:GeoJSON.Net.Geometry.GeographicPosition.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:GeoJSON.Net.Geometry.GeographicPosition"/> class from being created.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.GeographicPosition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:GeoJSON.Net.Geometry.GeographicPosition.Latitude">
            <summary>
            Gets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:GeoJSON.Net.Geometry.GeographicPosition.Longitude">
            <summary>
            Gets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="P:GeoJSON.Net.Geometry.GeographicPosition.Altitude">
            <summary>
            Gets the altitude.
            </summary>
        </member>
        <member name="P:GeoJSON.Net.Geometry.GeographicPosition.Coordinates">
            <summary>
            Gets or sets the coordinates, is a 2-size array
            </summary>
            <value>
            The coordinates.
            </value>
        </member>
        <member name="T:GeoJSON.Net.Exceptions.ParsingException">
            <summary>
            Exception raised when response from SimpleGeo API cannot be parsed
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Exceptions.ParsingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Exceptions.ParsingException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:GeoJSON.Net.Feature.Feature">
            <summary>
            A GeoJSON <see href="http://geojson.org/geojson-spec.html#feature-objects">Feature Object</see>.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Feature.Feature.#ctor(GeoJSON.Net.Geometry.IGeometryObject,System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Feature.Feature"/> class.
            </summary>
            <param name="geometry">The Geometry Object.</param>
            <param name="properties">The properties.</param>
            <param name="id">The (optional) identifier.</param>
        </member>
        <member name="M:GeoJSON.Net.Feature.Feature.#ctor(GeoJSON.Net.Geometry.IGeometryObject,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Feature.Feature"/> class.
            </summary>
            <param name="geometry">The Geometry Object.</param>
            <param name="featureObject">Class used to fill feature properties. Any public member will be added to feature properties</param>
            <param name="id">The (optional) identifier.</param>
        </member>
        <member name="P:GeoJSON.Net.Feature.Feature.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The handle.</value>
        </member>
        <member name="P:GeoJSON.Net.Feature.Feature.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:GeoJSON.Net.Feature.Feature.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:GeoJSON.Net.Feature.FeatureCollection">
            <summary>
            Defines the FeatureCollection type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Feature.FeatureCollection.#ctor(System.Collections.Generic.List{GeoJSON.Net.Feature.Feature})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Feature.FeatureCollection"/> class.
            </summary>
            <param name="features">The features.</param>
        </member>
        <member name="P:GeoJSON.Net.Feature.FeatureCollection.Features">
            <summary>
            Gets the features.
            </summary>
            <value>The features.</value>
        </member>
        <member name="T:GeoJSON.Net.Geometry.MultiPolygon">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#multipolygon">MultiPolygon</see> type.
            </summary>
        </member>
        <member name="M:GeoJSON.Net.Geometry.MultiPolygon.#ctor(System.Collections.Generic.List{GeoJSON.Net.Geometry.Polygon})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.MultiPolygon"/> class.
            </summary>
            <param name="polygons">The polygons contained in this MultiPolygon.</param>
        </member>
        <member name="P:GeoJSON.Net.Geometry.MultiPolygon.Coordinates">
            <summary>
            Gets the list of Polygons enclosed in this MultiPolygon.
            </summary>
        </member>
        <member name="T:GeoJSON.Net.Geometry.Point">
            <summary>
            In geography, a point refers to a Position on a map, expressed in latitude and longitude.
            </summary>
            <seealso href="http://geojson.org/geojson-spec.html#point"/>
        </member>
        <member name="M:GeoJSON.Net.Geometry.Point.#ctor(GeoJSON.Net.Geometry.IPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.Point"/> class.
            </summary>
            <param name="coordinates">The Position.</param>
        </member>
        <member name="P:GeoJSON.Net.Geometry.Point.Coordinates">
            <summary>
            Gets the Coordinate(s).
            </summary>
            <value>The Coordinates.</value>
        </member>
        <member name="T:GeoJSON.Net.Geometry.Polygon">
            <summary>
            Defines the <see href="http://geojson.org/geojson-spec.html#polygon">Polygon</see> type.
            Coordinates of a Polygon are a list of <see href="http://geojson.org/geojson-spec.html#linestring">linear rings</see>
            coordinate arrays. The first element in the array represents the exterior ring. Any subsequent elements
            represent interior rings (or holes).
            </summary>
            <seealso href="http://geojson.org/geojson-spec.html#polygon"/>
        </member>
        <member name="M:GeoJSON.Net.Geometry.Polygon.#ctor(System.Collections.Generic.List{GeoJSON.Net.Geometry.LineString})">
            <summary>
            Initializes a new instance of the <see cref="T:GeoJSON.Net.Geometry.Polygon"/> class.
            </summary>
            <param name="coordinates">
            The <see href="http://geojson.org/geojson-spec.html#linestring">linear rings</see> with the first element
            in the array representing the exterior ring. Any subsequent elements represent interior rings (or holes).
            </param>
        </member>
        <member name="M:GeoJSON.Net.Geometry.Polygon.op_Equality(GeoJSON.Net.Geometry.Polygon,GeoJSON.Net.Geometry.Polygon)">
            <summary>
            The equals operator that tests two polygons.
            </summary>
            <param name="a">Polygon a</param>
            <param name="b">Polygon b</param>
            <returns></returns>
        </member>
        <member name="M:GeoJSON.Net.Geometry.Polygon.op_Inequality(GeoJSON.Net.Geometry.Polygon,GeoJSON.Net.Geometry.Polygon)">
            <summary>
            The not equal operator checks if two polygons are not equal.
            </summary>
            <param name="a">Polygon a</param>
            <param name="b">Polygon b</param>
            <returns></returns>
        </member>
        <member name="M:GeoJSON.Net.Geometry.Polygon.GetHashCode">
            <summary>
            Get the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="P:GeoJSON.Net.Geometry.Polygon.Coordinates">
            <summary>
            Gets the list of points outlining this Polygon.
            </summary>
        </member>
    </members>
</doc>
